Процедура ОбработкаПроведения(Отказ, Режим)
				
		Движения.ОстаткиПродукции.Записывать = Истина;
		
		Движения.СтоимостьПродукции.Записывать = Истина;
		
		Движения.Продажи.Записывать = Истина;
				
		// Создать менеджер временных таблиц
		
		МенеджерВТ = Новый МенеджерВременныхТаблиц;
				
		#Область НоменклатураДокумента
		
		Запрос = Новый Запрос;
				
		// Укажем, какой менеджер временных таблиц использует этот запрос
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
				
		Запрос.Текст =
"ВЫБРАТЬ
|	РасходнаяНакладнаяПереченьНоменклатуры.Номенклатура КАК Номенклатура,
|	РасходнаяНакладнаяПереченьНоменклатуры.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
|	СУММА(РасходнаяНакладнаяПереченьНоменклатуры.Количество) КАК КоличествоВДокументе,
|	СУММА(РасходнаяНакладнаяПереченьНоменклатуры.Сумма) КАК СуммаВДокументе
|ПОМЕСТИТЬ НоменклатураДокумента
|ИЗ
|	Документ.РасходнаяНакладная.ПереченьНоменклатуры КАК РасходнаяНакладнаяПереченьНоменклатуры
|ГДЕ
|	РасходнаяНакладнаяПереченьНоменклатуры.Ссылка = &Ссылка
|
|СГРУППИРОВАТЬ ПО
|	РасходнаяНакладнаяПереченьНоменклатуры.Номенклатура,
|	РасходнаяНакладнаяПереченьНоменклатуры.Номенклатура.ВидНоменклатуры";
				
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
				
		РезультатЗапроса = Запрос.Выполнить();
		
		#КонецОбласти
				
		#Область ДвиженияДокумента
		
		Запрос2 = Новый Запрос;
		
		Запрос2.МенеджерВременныхТаблиц = МенеджерВТ;
		
		Запрос2.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураДокумента.Номенклатура КАК Номенклатура,
		|	НоменклатураДокумента.ВидНоменклатуры КАК ВидНоменклатуры,
		|	НоменклатураДокумента.КоличествоВДокументе КАК КоличествоВДокументе,
		|	НоменклатураДокумента.СуммаВДокументе КАК СуммаВДокументе,
		|	ЕСТЬNULL(СтоимостьПродукцииОстатки.СтоимостьОстаток, 0) КАК Стоимость,
		|	ЕСТЬNULL(ОстаткиПродукцииОстатки.КоличествоОстаток, 0) КАК Количество
		|ИЗ
		|	НоменклатураДокумента КАК НоменклатураДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьПродукции.Остатки(
		|				,
		|				Продукция В
		|					(ВЫБРАТЬ
		|						НоменклатураДокумента.Номенклатура
		|					ИЗ
		|						НоменклатураДокумента)) КАК СтоимостьПродукцииОстатки
		|		ПО НоменклатураДокумента.Номенклатура = СтоимостьПродукцииОстатки.Продукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПродукции.Остатки(
		|				,
		|				Продукция В
		|					(ВЫБРАТЬ
		|						НоменклатураДокумента.Номенклатура
		|					ИЗ
		|						НоменклатураДокумента)) КАК ОстаткиПродукцииОстатки
		|		ПО НоменклатураДокумента.Номенклатура = ОстаткиПродукцииОстатки.Продукция";
		
		// Установим необходимость блокировки данных в регистрах СтоимостьПродукции и ОстаткиПродукции
		
		Движения.СтоимостьПродукции.БлокироватьДляИзменения = Истина;
		
		Движения.ОстаткиПродукции.БлокироватьДляИзменения = Истина;
				
		// Запишем пустые наборы записей, чтобы читать остатки без учета данных в документе
		
		Движения.СтоимостьПродукции.Записать();
		
		Движения.ОстаткиПродукции.Записать();
				
		РезультатЗапроса = Запрос2.Выполнить();
				
		// ТЗ = РезультатЗапроса.Выгрузить();
				
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписи.Количество = 0 Тогда
				
				СтоимостьПродукции = 0;
					
				
			Иначе
				
				СтоимостьПродукции = ВыборкаДетальныеЗаписи.Стоимость / ВыборкаДетальныеЗаписи.Количество;
					
				
			КонецЕсли;
						
			Если ВыборкаДетальныеЗаписи.ВидНоменклатуры = Перечисления.ВидНоменклатуры.Продукция Тогда
				
				
				
				// Регистр ОстаткиПродукции Расход
				
				Движение = Движения.ОстаткиПродукции.Добавить();
				
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				
				Движение.Период = Дата;
				
				Движение.Продукция = ВыборкаДетальныеЗаписи.Номенклатура;
				
				Движение.Склад = Склад;
				
				Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоВДокументе;
				
				
				
				// Регистр СтоимостьПродукции Расход
				
				Движение = Движения.СтоимостьПродукции.Добавить();
				
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				
				Движение.Период = Дата;
				
				Движение.Продукция = ВыборкаДетальныеЗаписи.Номенклатура;
				
				Движение.Стоимость = ВыборкаДетальныеЗаписи.КоличествоВДокументе * СтоимостьПродукции;
					
				
			КонецЕсли;
			
			
			// Регистр Продажи
			
			Движение = Движения.Продажи.Добавить();
			
			Движение.Период = Дата;
			
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			
			Движение.Клиент = Клиент;
			
			Движение.Сотрудник = Сотрудник;
			
			Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоВДокументе;
			
			Движение.Выручка = ВыборкаДетальныеЗаписи.СуммаВДокументе;
			
			Движение.Стоимость = СтоимостьПродукции * ВыборкаДетальныеЗаписи.КоличествоВДокументе;
			
		КонецЦикла;

		Движения.Записать();
		
		#КонецОбласти
		
		
		
		#Область КонтрольОстатков
		
		Если Режим = РежимПроведенияДокумента.Оперативный Тогда
						
			// Проверить отрицательные остатки
			
			Запрос3 = Новый Запрос;
			
			Запрос3.МенеджерВременныхТаблиц = МенеджерВТ;
			
			Запрос3.Текст =
			"ВЫБРАТЬ
			|	ОстаткиПродукцииОстатки.Продукция КАК Продукция,
			|	ОстаткиПродукцииОстатки.КоличествоОстаток КАК КоличествоОстаток
			|ИЗ
			|	РегистрНакопления.ОстаткиПродукции.Остатки(
			|			,
			|			Продукция В
			|					(ВЫБРАТЬ
			|						НоменклатураДокумента.Номенклатура
			|					ИЗ
			|						НоменклатураДокумента)
			|				И Склад = &Склад) КАК ОстаткиПродукцииОстатки
			|ГДЕ
			|	ОстаткиПродукцииОстатки.КоличествоОстаток < 0";
			
			
			
			Запрос3.УстановитьПараметр("Склад", Склад);
			
			
			
			РезультатЗапроса = Запрос3.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Сообщение = Новый СообщениеПользователю();
				
				Сообщение.Текст = "Не хватает " + Строка(- ВыборкаДетальныеЗаписи.КоличествоОстаток) + " единиц продукции """ + ВыборкаДетальныеЗаписи.Продукция + """";
				
				Сообщение.Сообщить();
				
				
				
				Отказ = Истина;
				
				
				
			КонецЦикла;
			
			
			
		КонецЕсли;
		
		#КонецОбласти
КонецПроцедуры 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Клиенты") Тогда
		// Заполнение шапки
		Клиент = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры
